name: Build & deploy - TwitPoster (main)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ["master", "azure-function"]
    paths:
      - "TwitPoster/**"
      - ".github/workflows/TwitPoster.deploy.yml"
  workflow_dispatch:

permissions:
  contents: 'read'
  packages: 'write'

env:
  twitposter_image: 'ghcr.io/wallyrion/twitposter:latest'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore dependencies - TwitPoster
        run: dotnet restore ./TwitPoster

      - name: Build - TwitPoster
        run: dotnet build --no-restore ./TwitPoster -c Release
      
      - name: Test - TwitPoster
        env:
          ASPNETCORE_ENVIRONMENT: Production
        run: dotnet test --no-build --verbosity normal ./TwitPoster -c Release

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: publish image
        run: dotnet publish ./TwitPoster/src/TwitPoster.Web/TwitPoster.Web.csproj /t:PublishContainer -r linux-x64

      - name: change image tag
        run: docker tag twitposter ${{ env.twitposter_image }}

      - name: Docker Push
        run: docker push ${{ env.twitposter_image }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'prod'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}/swagger/index.html
    
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_TWITPOSTER }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_TWITPOSTER }}
          images: ${{ env.twitposter_image }}

      - name: Trigger Azure WebHook
        run: |
          curl -X POST $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.AZURE_WEBHOOK_URL_TWITPOSTER }}
        shell: bash
        
      
  deploy_to_VM:
    runs-on: ubuntu-latest
    needs: build
    if: false
    environment:
      name: 'vm'
      url: http://twitposters.com/swagger/index.html

    steps:
      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull the image to VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script:
            sudo docker pull ${{ env.twitposter_image}};
            sudo docker stop twitposter || true;
            sudo docker rm twitposter || true;
            sudo docker run -p 5000:8080 -d --name twitposter --restart unless-stopped -e "Secrets__ClientId=${{ secrets.KEYVAULT_CLIENT_ID }}" -e "Secrets__UseSecrets=true" -e "Secrets__ClientSecret=${{ secrets.KEYVAULT_CLIENT_SECRET }}" -e "Secrets__TenantId=${{ secrets.KEYVAULT_TENANT_ID }}" -e "Secrets__KeyVaultUri=${{ secrets.KEYVAULT_URI }}" ${{ env.twitposter_image }}
