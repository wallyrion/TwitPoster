name: Deploy environment

on:
  workflow_call:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
        type: string
      twitposter_image:
        description: 'The image to deploy to'
        required: true
        type: string
      APP_SERVICE_NAME:
        description: 'The image to deploy to'
        required: true
        type: string


permissions:
  contents: 'read'
  packages: 'write'


jobs:
  deploy:
    outputs:
      TWITPOSTER_URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}/swagger/index.html
    
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          publish-profile: ${{ secrets.TEST_APP_PUBLISH_PROFILE }}
          images: ${{ inputs.twitposter_image }}

      - name: Trigger Azure WebHook
        if: env.WEBHOOK_URL != ''
        run: |
          curl -X POST $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.AZURE_WEBHOOK_URL_TWITPOSTER }}
        shell: bashraform@v3
  
  confirm_deployment:
    needs: deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    
    steps:
      - name: Check Deployment Health
        id: check-health
        run: |
          TWITPOSTER_URL="${{ needs.deploy.outputs.TWITPOSTER_URL }}"
          IMAGE_TAG="${{ github.sha }}"
          
          echo "Starting deployment health check..."
          echo "TWITPOSTER_URL: $TWITPOSTER_URL"
          echo "Expected IMAGE_TAG: $IMAGE_TAG"
          
          for i in {1..30}; do
            echo "Checking health of the deployed application... Attempt $i"
            response=$(curl -s -H "Content-Type: application/json" $TWITPOSTER_URL/health)
            echo "Response: $response"
          
            if echo "$response" | jq -e ".imageTag == \"$IMAGE_TAG\"" > /dev/null; then
              echo "Deployment verification succeeded: imageTag matches."
              exit 0
            fi
          
            echo "Deployment verification failed: imageTag does not match. Retrying in 10 seconds..."
            sleep 10
          done
          
          echo "Deployment verification failed: imageTag did not match after 30 attempts."
          exit 1
        shell: bash
          